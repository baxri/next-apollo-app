{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./lib/cookie.js","webpack:///./lib/init-apollo.js","webpack:///./lib/with-apollo-client.js","webpack:///./pages/_app.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"apollo-boost\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link-context\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/app\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-apollo\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Router from 'next/router'\n\nexport function getToken(req = {}) {\n    if (!process.browser) {\n        return (req.cookies && req.cookies.Authorization) ? req.cookies.Authorization : '';\n    } else {\n        return _getCookieFromDoc('Authorization');\n    }\n}\n\nexport function setToken(token) {\n    document.cookie = \"Authorization=\" + token;\n}\n\nexport function isLoggedIn(req = {}) {\n    const token = getToken(req);\n\n    if (!token) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function checkAuth(req = {}, res = {}) {\n\n    const token = getToken(req);\n\n    if (!token) {\n        if (!process.browser)\n            res.redirect('/login');\n        else\n            Router.push('/login');\n    }\n}\n\nfunction _getCookieFromDoc(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","import { HttpLink } from 'apollo-boost'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\nimport fetch from 'isomorphic-unfetch'\n\nlet apolloClient = null\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!process.browser) {\n  global.fetch = fetch\n}\n\nfunction create(initialState, { getToken }) {\n\n  const httpLink = new HttpLink({\n    uri: 'https://fakerql.com/graphql',\n    credentials: 'same-origin'\n    // credentials: 'include'\n  })\n\n  const authLink = setContext((_, { headers }) => {\n    const token = getToken()\n    return {\n      headers: {\n        ...headers,\n        username: token ? token : null\n      }\n    }\n  })\n\n  return new ApolloClient({\n    connectToDevTools: process.browser,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache().restore(initialState || {})\n  })\n}\n\nexport default function initApollo(initialState, options) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return create(initialState, options)\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(initialState, options)\n  }\n\n  return apolloClient\n}","import React from 'react'\nimport initApollo from './init-apollo'\nimport Head from 'next/head'\nimport { getDataFromTree } from 'react-apollo'\nimport { getToken } from \"./cookie\";\n\nexport default App => {\n  return class Apollo extends React.Component {\n    static displayName = 'withApollo(App)'\n    static async getInitialProps(ctx) {\n\n      const { Component, router, req } = ctx\n\n      let appProps = {}\n      if (App.getInitialProps) {\n        appProps = await App.getInitialProps(ctx)\n      }\n\n      // Run all GraphQL queries in the component tree\n      // and extract the resulting data\n      const apollo = initApollo({}, {\n        getToken: () => getToken(req)\n      })\n\n\n      if (!process.browser) {\n        try {\n          // Run all GraphQL queries\n          await getDataFromTree(\n            <App\n              {...appProps}\n              Component={Component}\n              router={router}\n              apolloClient={apollo}\n            />\n          )\n        } catch (error) {\n          // Prevent Apollo Client GraphQL errors from crashing SSR.\n          // Handle them in components via the data.error prop:\n          // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n          console.error('Error while running `getDataFromTree`', error)\n        }\n\n        // getDataFromTree does not call componentWillUnmount\n        // head side effect therefore need to be cleared manually\n        Head.rewind()\n      }\n\n      // Extract query data from the Apollo store\n      const apolloState = apollo.cache.extract()\n\n      return {\n        ...appProps,\n        apolloState\n      }\n    }\n\n    constructor(props) {\n      super(props)\n      this.apolloClient = initApollo(props.apolloState, {\n        getToken: () => getToken()\n      })\n    }\n\n    render() {\n      return <App {...this.props} apolloClient={this.apolloClient} />\n    }\n  }\n}\n","import App, { Container } from 'next/app'\nimport React from 'react'\nimport withApolloClient from '../lib/with-apollo-client'\nimport { ApolloProvider } from 'react-apollo'\n\nclass MyApp extends App {\n  render () {\n    const { Component, pageProps, apolloClient } = this.props\n    return (\n      <Container>\n        <ApolloProvider client={apolloClient}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    )\n  }\n}\n\nexport default withApolloClient(MyApp)\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"apollo-boost\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link-context\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/app\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA,WAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAdA;AACA;AADA;AAAA;AAAA;AAwBA;AACA;AACA;AAJA;AACA;AAvBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA8BA;AACA;AACA;AACA;AACA;AAlCA;AAoCA;AACA;AACA;AACA;AAvCA;AAyCA;AACA;AA1CA;AA8CA;AA9CA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAiDA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAFA;AAKA;AACA;AAxDA;AAAA;AAAA;AA0DA;AAAA;AAAA;AACA;AA3DA;AACA;AADA;AAAA;AA6DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAVA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;AClBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}